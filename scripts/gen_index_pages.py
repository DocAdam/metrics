"""
This script creates all the index.html etc. for all the projects, orgs etc.

e.g.
/metrics
/metrics/twitter
/metrics/twitter/twemoji
"""

from glob import glob
import json
import os

PATH_TO_METRICS_POSTS = "_posts"
PATH_TO_METADATA = "_metadata"
PATH_TO_GRAPHS = "graphs"

ALL_ORGS = filter(os.path.isdir, glob(PATH_TO_METRICS_POSTS + "/*"))
ALL_PROJECTS = filter(os.path.isdir, glob(PATH_TO_METRICS_POSTS + "/*/*"))

"""
URL: /metrics
"""
with open(os.path.join(PATH_TO_METADATA, "projects_tracked.json")) as f:
    PROJECTS_TRACKED = json.load(f)

orgs_tracked = PROJECTS_TRACKED['orgs']
repos_tracked = PROJECTS_TRACKED['projects']

list_of_orgs = ''
list_of_orgs += '\t' + '<ul>' + '\n'
for org in orgs_tracked:
    list_of_orgs += '\t\t' + f'<li><a href="/metrics/{org}/WEEKLY">{org}</a></li>' + '\n'
list_of_orgs += '\t' + '</ul>' + '<br>\n'

# Show twitter projects first
orgs_list = list(PROJECTS_TRACKED['projects'])
orgs_list.remove('twitter')
orgs_list.insert(0, 'twitter')

list_of_projects = ''
list_of_projects += '\t' + '<ul>' + '\n'
for org in orgs_list:
    list_of_projects += '\t\t' + '<li>' + org + '\n'
    list_of_projects += '\t\t\t' + '<ul>' + '\n'
    for project in sorted(PROJECTS_TRACKED['projects'][org]):
        list_of_projects += '\t\t\t\t' + '<li>' + f'<a href="/metrics/{org}/{project}/WEEKLY">{project}</a>' + '</li>' + '\n'
    list_of_projects += '\t\t\t' + '</ul>' + '\n'
    list_of_projects += '\t\t' + '</li>' + '\n'
list_of_projects += '\t' + '</ul>' + '\n'

index_text = f"""\
---
layout: default
title: Your New Jekyll Site
---

<div id="home">
  <h1>Organizations</h1>
{list_of_orgs}
  <h1>Projects</h1>
{list_of_projects}
</div>
"""

with open("index.html", "w+") as f:
    f.write(index_text)


"""
URL: /metrics/<org>/<repo>/
"""

project_text = """\
---
layout: default
permalink: /{org}/{repo}/
---
Welcome to {repo}'s metrics homepage!
<br><br>
Latest WEEKLY Report - <a href="{weekly_metrics_link}">{weekly_metrics_link}</a>
<br>
Latest MONTHLY Report - <a href="{monthly_metrics_link}">{monthly_metrics_link}</a>
<br>
"""

for project in ALL_PROJECTS:
    print("LOG: Starting with", project)
    _, org, repo = project.split("/")
    weekly_metrics_link = f"https://twitter.github.io/metrics/{org}/{repo}/WEEKLY"
    monthly_metrics_link = f"https://twitter.github.io/metrics/{org}/{repo}/MONTHLY"
    _text = project_text.format(org=org,
                                repo=repo,
                                weekly_metrics_link=weekly_metrics_link,
                                monthly_metrics_link=monthly_metrics_link)
    file_path = project + "/" + "2018-05-29-index.md"  # Don't change the date. This prevents duplicate posts.
    with open(file_path, "w+") as f:
        f.write(_text)
    print("LOG: Wrote to", file_path)

"""
URL: /metrics/<org>
"""

org_text = """\
---
layout: org-homepage
permalink: /{org}/
---
<div class="content-without-graphs">
    Welcome to {org}'s metrics homepage!
    <br><br>
    Latest WEEKLY Report - <a href="{weekly_metrics_link}">{weekly_metrics_link}</a>
    <br>
    Latest MONTHLY Report - <a href="{monthly_metrics_link}">{monthly_metrics_link}</a>
    <br>
</div>
"""

for _org in ALL_ORGS:
    print("LOG: Starting with", _org)
    _, org = _org.split("/")
    weekly_metrics_link = f"https://twitter.github.io/metrics/{org}/WEEKLY"
    monthly_metrics_link = f"https://twitter.github.io/metrics/{org}/MONTHLY"
    file_text = org_text.format(org=org,
                                weekly_metrics_link=weekly_metrics_link,
                                monthly_metrics_link=monthly_metrics_link)

    """
    Add svg graphs generated by scripts/gen_graphs.py
    """
    # timeseries graphs
    all_timeseries_graphs = glob(PATH_TO_GRAPHS + "/" + org + "/timeseries_*.svg")
    file_text += '<div class="graph-container">\n\n'
    file_text += '<p><b>Timeseries graphs</b></p>\n'
    file_text += '<div class="row">\n'
    for graph in all_timeseries_graphs:
        file_text += f'\t<object class="cell" type="image/svg+xml" data="{{{{ site.url }}}}{{{{ site.baseurl }}}}/{graph}">\n'
        file_text += '\t\tYour browser does not support SVG\n'
        file_text += '\t</object>\n'
    file_text += '</div>\n'
    file_text += '\n</div>\n'

    # # Treemap graphs
    # all_treemap_graphs = glob(PATH_TO_GRAPHS + "/" + org + "/treemap_*.svg")
    # file_text += '<p><b>Binary Treemap graphs</b> (recent week)</p>\n'
    # file_text += '<div class="row">\n'
    # for graph in all_treemap_graphs:
    #     file_text += '\t<object class="cell" type="image/svg+xml" data="{{{{ site.url }}}}{{{{ site.baseurl }}}}/{}">\n'.format(graph)
    #     file_text += '\t\tYour browser does not support SVG\n'
    #     file_text += '\t</object>\n'
    # file_text += '</div>\n'


    file_path = _org + "/" + "2018-05-29-index.md"  # Don't change the date. This prevents duplicate posts.
    with open(file_path, "w+") as f:
        f.write(file_text)
    print("LOG: Wrote to", file_path)
